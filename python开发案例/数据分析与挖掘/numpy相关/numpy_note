# Numpy
Python并没有提供数组的功能。虽然列表可以完成基本的数组功能，但它不是真正的数组，而且在数据量较大的时候，使用列表的速度会慢的让人难以接受。
为此，Numpy提供了真正的数组功能，以及对数据进行快速高效处理的函数。
Numpy还是很多更高级的扩展库的依赖库，后面讲解的Matplotlib库、Pandas库都依赖于它。
值得强调的是，Numpy内置函数处理数据的速度是C语言界别的，因为在编写程序的时候，应当尽量使用它们内置的函数，避免出现效率瓶颈的现象。

#### Numpy(Numerical Python的简称)是高性能科学计算和数据分析的基础包。它是上面所介绍的其他高级工具的构建基础。

其部分功能如下：

* ndarray, 一个具有复杂广播能力的快速且节省空间的多维数组。
* 对于整组数据进行快速的运算，无需编写循环。
* 用于读写磁盘数据的工具以及用于操作内容映射文件的工具。
* 用于集成由C, C++等语言编写的代码的工具。
* Numpy本身并没有提供那么多高级的数据分析功能，理解Numpy数组以及面向数组的计算将有助于我们更加高效的使用pandas之类的工具。

## ndarray概述
Numpy最重要的一个特点就是其N纬数组对象(即ndarray),该对象是一个快速而灵活的大数据集容器.你可以利用这种数组对整块的数据执行一些数学运算。

ndarray是一个通用的同构数据多维容器，其中的所有元素必须是相同类型的。每个数组都有一个shape(表示各维度大小的元组)和一个dtype(表示数组数据类型的对象):

我们将会介绍Numpy数组的基本用法，虽然说大多数数据分析工作不需要深入理解Numpy，但精通面向数组的编程和思维方式是成为Python科学计算牛人的一大关键步骤。

```
 注意: 我们将依照标准的Numpy约定，即总是使用import numpy as np. 当然你也可以为了不写np,而直接在代码中使用from numpy import *, 但是建议你最好还是不要养成这样的坏习惯。
```